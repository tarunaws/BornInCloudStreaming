#Node label
#kubectl label nodes ip-10-10-100-239 controlplane=core1
#kubectl label nodes ip-10-10-100-239 controlplane=core2
#kubeadm token create --print-join-command --ttl 0
####### Default resource limit ########
apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-limit-range
spec:
  limits:
  - default:
      cpu: "6000m"
      memory: "6000Mi"
    defaultRequest:
      cpu: "2000m"
      memory: "4000Mi"
    type: Container

---
#######Service Account ##############
apiVersion: v1
kind: ServiceAccount
metadata:
  name: compress-job-sa

---
###### Roles ############
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: compress-job-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch", "extensions"]
  resources: ["jobs","jobs/status"]
  verbs: ["create", "delete","get", "watch", "list"]

---
#########Role Binding ##########
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: compress-job-rb
  namespace: default
subjects:
- kind: ServiceAccount
  name: compress-job-sa
  namespace: default
roleRef:
  kind: Role
  name: compress-job-role
  apiGroup: rbac.authorization.k8s.io

---
#Copy
apiVersion: v1
kind: Pod
metadata:
   name: copy-1
   labels:
      app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: copy-1
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
      - echo starting;
        while true;
        do
        sleep 2;
        python3 1_copy.py;
        date;
        done;
        echo done;
    resources:
      requests:
        cpu: "1000m"
        memory: "1000Mi"
      limits:
        cpu: "2000m"
        memory: "2000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: copy-2
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: copy-2
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
      - echo starting;
        while true;
        do
        sleep 5;
        python3 1_copy.py;
        date;
        done;
        echo done;
    resources:
      requests:
        cpu: "1000m"
        memory: "1000Mi"
      limits:
        cpu: "2000m"
        memory: "2000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
   name: copy-3
   labels:
      app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: copy-3
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
      - echo starting;
        while true;
        do
        sleep 2;
        python3 1_copy.py;
        date;
        done;
        echo done;
    resources:
      requests:
        cpu: "1000m"
        memory: "1000Mi"
      limits:
        cpu: "2000m"
        memory: "2000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: copy-4
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: copy-4
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
      - echo starting;
        while true;
        do
        sleep 5;
        python3 1_copy.py;
        date;
        done;
        echo done;
    resources:
      requests:
        cpu: "1000m"
        memory: "1000Mi"
      limits:
        cpu: "2000m"
        memory: "2000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
#distribute
apiVersion: v1
kind: Pod
metadata:
  name: distribute-1
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: distribute-1
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
      - echo starting;
        while true;
        do
        sleep 2;
        python3 2_distribute.py;
        date;
        done;
        echo done;
    resources:
      requests:
        cpu: "1000m"
        memory: "1000Mi"
      limits:
        cpu: "2000m"
        memory: "2000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: distribute-2
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: distribute-2
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
      - echo starting;
        while true;
        do
        sleep 5;
        python3 2_distribute.py;
        date;
        done;
        echo done;
    resources:
      requests:
        cpu: "1000m"
        memory: "1000Mi"
      limits:
        cpu: "2000m"
        memory: "2000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: distribute-3
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: distribute-3
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
      - echo starting;
        while true;
        do
        sleep 5;
        python3 2_distribute.py;
        date;
        done;
        echo done;
    resources:
      requests:
        cpu: "1000m"
        memory: "1000Mi"
      limits:
        cpu: "2000m"
        memory: "2000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: distribute-4
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: distribute-4
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
      - echo starting;
        while true;
        do
        sleep 2;
        python3 2_distribute.py;
        date;
        done;
        echo done;
    resources:
      requests:
        cpu: "1000m"
        memory: "1000Mi"
      limits:
        cpu: "2000m"
        memory: "2000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
#Splitter
apiVersion: v1
kind: Pod
metadata:
  name: splitter-1
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: splitter-1
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 2;
      python3 3_splitter.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "8000m"
        memory: "20000Mi"
      limits:
        cpu: "10000m"
        memory: "22000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: splitter-2
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: splitter-2
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 5;
      python3 3_splitter.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "8000m"
        memory: "20000Mi"
      limits:
        cpu: "10000m"
        memory: "22000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: splitter-3
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: splitter-3
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 2;
      python3 3_splitter.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "8000m"
        memory: "20000Mi"
      limits:
        cpu: "10000m"
        memory: "22000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: splitter-4
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: splitter-4
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 5;
      python3 3_splitter.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "8000m"
        memory: "20000Mi"
      limits:
        cpu: "10000m"
        memory: "22000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
#Transcoder
apiVersion: v1
kind: Pod
metadata:
  name: transcoder-1
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: transcoder-1
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      python3 4_transcoder.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "4000m"
        memory: "4000Mi"
      limits:
        cpu: "6000m"
        memory: "6000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: transcoder-2
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: transcoder-2
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      python3 4_transcoder.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "4000m"
        memory: "4000Mi"
      limits:
        cpu: "6000m"
        memory: "6000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
#Joining
apiVersion: v1
kind: Pod
metadata:
  name: joiner-1
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: joiner-1
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 2;
      python3 5_joining.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "8000m"
        memory: "15000Mi"
      limits:
        cpu: "10000m"
        memory: "18000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
        path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: joiner-2
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: joiner-2
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 5;
      python3 5_joining.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "8000m"
        memory: "15000Mi"
      limits:
        cpu: "10000m"
        memory: "18000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
        path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: joiner-3
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: joiner-3
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 2;
      python3 5_joining.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "8000m"
        memory: "15000Mi"
      limits:
        cpu: "10000m"
        memory: "18000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
        path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: joiner-4
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: joiner-4
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 2;
      python3 5_joining.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "8000m"
        memory: "15000Mi"
      limits:
        cpu: "10000m"
        memory: "18000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
        path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
#Packager
apiVersion: v1
kind: Pod
metadata:
  name: packager-1
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: packager-1
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 2;
      python3 6_packager.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "10000m"
        memory: "20000Mi"
      limits:
        cpu: "15000m"
        memory: "30000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: packager-2
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core1"
  containers:
  - name: packager-2
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 5;
      python3 6_packager.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "10000m"
        memory: "20000Mi"
      limits:
        cpu: "15000m"
        memory: "30000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: packager-3
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: packager-3
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 2;
      python3 6_packager.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "10000m"
        memory: "20000Mi"
      limits:
        cpu: "15000m"
        memory: "30000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa

---
apiVersion: v1
kind: Pod
metadata:
  name: packager-4
  labels:
     app: core
spec:
  nodeSelector:
    controlplane: "core2"
  containers:
  - name: packager-4
    image: 261443307797.dkr.ecr.ap-south-1.amazonaws.com/bornincloudstreaming-dev:dev_v23
    imagePullPolicy: Always
    command: ["/bin/sh", "-c"]
    args:
    - echo starting;
      while true;
      do
      sleep 5;
      python3 6_packager.py;
      date;
      done;
      echo done;
    resources:
      requests:
        cpu: "10000m"
        memory: "20000Mi"
      limits:
        cpu: "15000m"
        memory: "30000Mi"
    volumeMounts:
    - name: cp-media
      mountPath: /media
  volumes:
  - name: cp-media
    hostPath:
      path: /mnt/transcodingapi
  serviceAccountName: compress-job-sa


---
#Cronjob for deleting completed jobs
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-cronjob
spec:
  schedule: "*/15 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: compress-job-sa
          containers:
          - name: kubectl-container
            image: bitnami/kubectl:latest
            command: ["sh", "-c", "kubectl delete jobs --field-selector status.successful=1"]
          restartPolicy: Never
